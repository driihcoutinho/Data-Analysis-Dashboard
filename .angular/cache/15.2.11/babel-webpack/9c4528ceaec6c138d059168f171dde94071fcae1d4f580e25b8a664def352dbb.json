{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/adrie/Desktop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"./services/auth.service\";\nimport * as i3 from \"./services/navigation.service\";\nimport * as i4 from \"./services/ui.service\";\nexport class AppComponent {\n  constructor(platform, authService, navigationService, uiService) {\n    this.platform = platform;\n    this.authService = authService;\n    this.navigationService = navigationService;\n    this.uiService = uiService;\n    this.initializeApp();\n  }\n  ngOnInit() {\n    // Observar mudanças no estado de autenticação\n    this.authService.user$.subscribe(user => {\n      if (user) {\n        console.log('User is authenticated:', user.email);\n      } else {\n        console.log('User is not authenticated');\n      }\n    });\n  }\n  initializeApp() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this.platform.ready();\n        console.log(`${environment.appName} v${environment.version} initialized`);\n        // Verificar estado de autenticação inicial\n        const isAuthenticated = yield _this.authService.isAuthenticated().toPromise();\n        if (isAuthenticated) {\n          yield _this.navigationService.navigateAfterLogin();\n        }\n      } catch (error) {\n        console.error('Error initializing app:', error);\n        yield _this.uiService.showError('Failed to initialize application');\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.NavigationService), i0.ɵɵdirectiveInject(i4.UiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 2,\n      vars: 0,\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-app\");\n          i0.ɵɵelement(1, \"ion-router-outlet\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      dependencies: [i1.IonApp, i1.IonRouterOutlet],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"mappings":";AAKA,SAASA,WAAW,QAAQ,6BAA6B;;;;;;AAWzD,OAAM,MAAOC,YAAY;EACvBC,YACUC,QAAkB,EAClBC,WAAwB,EACxBC,iBAAoC,EACpCC,SAAoB;IAHpB,aAAQ,GAARH,QAAQ;IACR,gBAAW,GAAXC,WAAW;IACX,sBAAiB,GAAjBC,iBAAiB;IACjB,cAAS,GAATC,SAAS;IAEjB,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,QAAQ;IACN;IACA,IAAI,CAACJ,WAAW,CAACK,KAAK,CAACC,SAAS,CAACC,IAAI,IAAG;MACtC,IAAIA,IAAI,EAAE;QACRC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,IAAI,CAACG,KAAK,CAAC;OAClD,MAAM;QACLF,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;IAE5C,CAAC,CAAC;EACJ;EAEcN,aAAa;IAAA;IAAA;MACzB,IAAI;QACF,MAAM,KAAI,CAACJ,QAAQ,CAACY,KAAK,EAAE;QAC3BH,OAAO,CAACC,GAAG,CAAC,GAAGb,WAAW,CAACgB,OAAO,KAAKhB,WAAW,CAACiB,OAAO,cAAc,CAAC;QAEzE;QACA,MAAMC,eAAe,SAAS,KAAI,CAACd,WAAW,CAACc,eAAe,EAAE,CAACC,SAAS,EAAE;QAC5E,IAAID,eAAe,EAAE;UACnB,MAAM,KAAI,CAACb,iBAAiB,CAACe,kBAAkB,EAAE;;OAEpD,CAAC,OAAOC,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,MAAM,KAAI,CAACf,SAAS,CAACgB,SAAS,CAAC,kCAAkC,CAAC;;IACnE;EACH;;;uBAnCWrB,YAAY;IAAA;EAAA;;;YAAZA,YAAY;MAAAsB;MAAAC;MAAAC;MAAAC;QAAA;UANrBC,+BAAS;UACPA,oCAAuC;UACzCA,iBAAU","names":["environment","AppComponent","constructor","platform","authService","navigationService","uiService","initializeApp","ngOnInit","user$","subscribe","user","console","log","email","ready","appName","version","isAuthenticated","toPromise","navigateAfterLogin","error","showError","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\adrie\\Desktop\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { AuthService } from './services/auth.service';\r\nimport { NavigationService } from './services/navigation.service';\r\nimport { UiService } from './services/ui.service';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <ion-app>\r\n      <ion-router-outlet></ion-router-outlet>\r\n    </ion-app>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private platform: Platform,\r\n    private authService: AuthService,\r\n    private navigationService: NavigationService,\r\n    private uiService: UiService\r\n  ) {\r\n    this.initializeApp();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Observar mudanças no estado de autenticação\r\n    this.authService.user$.subscribe(user => {\r\n      if (user) {\r\n        console.log('User is authenticated:', user.email);\r\n      } else {\r\n        console.log('User is not authenticated');\r\n      }\r\n    });\r\n  }\r\n\r\n  private async initializeApp() {\r\n    try {\r\n      await this.platform.ready();\r\n      console.log(`${environment.appName} v${environment.version} initialized`);\r\n\r\n      // Verificar estado de autenticação inicial\r\n      const isAuthenticated = await this.authService.isAuthenticated().toPromise();\r\n      if (isAuthenticated) {\r\n        await this.navigationService.navigateAfterLogin();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing app:', error);\r\n      await this.uiService.showError('Failed to initialize application');\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}